{"version":3,"sources":["components/Edition.js","components/DayList.js","components/PopUp.js","App.js","index.js"],"names":["Edition","props","state","date","feeling","message","onChangeInfo","bind","onSubmit","event","newInfo","currentTarget","value","infoKey","name","this","setState","onFeelingsSubmit","className","htmlFor","type","id","min","max","step","onChange","defaultChecked","placeholder","role","aria-label","to","onClick","React","Component","DayList","days","showMessage","length","map","day","index","key","PopUp","title","App","selectedDay","isPopupShown","getUser","ls","JSON","parse","localStorage","getItem","prevState","newInformation","push","setItem","stringify","setTimeout","Fragment","exact","path","render","RouterProps","match","ReactDOM","document","getElementById"],"mappings":"2aA2HeA,G,kBArHb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,KAAM,aACNC,QAAS,QACTC,QAAS,IAGX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAVC,E,0EAaJE,GACX,IAAMC,EAAUD,EAAME,cAAcC,MAC9BC,EAAUJ,EAAME,cAAcG,KAEpCC,KAAKC,SAAL,eACGH,EAAUH,M,iCAIH,IACFO,EAAqBF,KAAKd,MAA1BgB,iBADC,EAE0BF,KAAKb,MAAhCC,EAFC,EAEDA,KAAMC,EAFL,EAEKA,QAASC,EAFd,EAEcA,QAEvBY,EAAiB,CACfd,KAAMA,EACNC,QAASA,EACTC,QAAsB,UAAZD,EAAuBC,EAAU,O,+BAIrC,IACAC,EAA2BS,KAA3BT,aAAcE,EAAaO,KAAbP,SADf,EAE4BO,KAAKb,MAAhCE,EAFD,EAECA,QAASC,EAFV,EAEUA,QAASF,EAFnB,EAEmBA,KAE1B,OACE,yBAAKe,UAAU,WACb,0BAAMA,UAAU,QACd,yBAAKA,UAAU,QACb,2BAAOA,UAAU,cAAcC,QAAQ,QAAvC,SACA,2BACED,UAAU,oBACVE,KAAK,OACLC,GAAG,OACHP,KAAK,OACLQ,IAAI,aACJC,IAAI,aACJC,KAAK,IACLZ,MAAOT,EACPsB,SAAUnB,KAGd,yBAAKY,UAAU,oBACb,uBAAGA,UAAU,SAAb,UACA,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,eAAeC,QAAQ,SAAxC,MAGA,2BACED,UAAU,eACVG,GAAG,QACHD,KAAK,QACLR,MAAM,QACNE,KAAK,UACLY,gBAAc,EACdD,SAAUnB,KAGd,6BACE,2BAAOY,UAAU,eAAeC,QAAQ,OAAxC,MAGA,2BACED,UAAU,eACVG,GAAG,MACHD,KAAK,QACLR,MAAM,MACNE,KAAK,UACLW,SAAUnB,OAKL,UAAZF,EACC,yBAAKc,UAAU,WACb,2BAAOA,UAAU,iBAAiBC,QAAQ,YAC1C,2BACED,UAAU,uBACVE,KAAK,OACLC,GAAG,UACHP,KAAK,UACLa,YAAY,oCACZF,SAAUnB,EACVM,MAAOP,KAGX,6BACE,uBAAGa,UAAU,oBAAb,QAAqC,0BAAMU,KAAK,MAAMC,aAAW,eAA5B,gBAArC,6CAGN,kBAAC,IAAD,CAAMX,UAAU,gBAAgBY,GAAG,KACjC,4BAAQZ,UAAU,eAAeE,KAAK,SAASW,QAASvB,GAAxD,WACA,4BAAQU,UAAU,iBAAiBE,KAAK,UAAxC,kB,GA1GUY,IAAMC,YCsCbC,G,MAtCC,SAACjC,GAAW,IAClBkC,EAAsBlC,EAAtBkC,KAAMC,EAAgBnC,EAAhBmC,YAEd,OACE,yBAAKlB,UAAU,WACb,kBAAC,IAAD,CAAMA,UAAU,gBAAgBY,GAAG,SACjC,4BAAQZ,UAAU,eAAeE,KAAK,UAAtC,MAEF,yBAAKF,UAAU,qBACZiB,EAAKE,OACJ,wBAAInB,UAAU,iBACTiB,EAAKG,KAAI,SAACC,EAAKC,GAAN,OACN,wBAAIC,IAAG,cAASD,GAAStB,UAAU,gBACjC,yBAAKA,UAAU,mBAAmBa,QAAS,kBAAMK,EAAYG,KAC3D,uBAAGrB,UAAU,aAAaqB,EAAIpC,MACf,UAAhBoC,EAAInC,QACH,0BAAMc,UAAU,aAAaU,KAAK,MAAMC,aAAW,WAAnD,gBACA,0BAAMX,UAAU,aAAaU,KAAK,MAAMC,aAAW,gBAAnD,sBAMZ,yBAAKX,UAAU,oBAAf,kCAEE,0BAAMA,UAAU,0BAA0BU,KAAK,MAAMC,aAAW,YAAhE,qBCVGa,G,MAhBD,SAACzC,GAAW,IAChB0C,EAAmB1C,EAAnB0C,MAAOtC,EAAYJ,EAAZI,QAEf,OACE,yBAAKa,UAAU,SACb,uBAAGA,UAAU,gBAAgByB,GAC3BtC,EAAU,uBAAGa,UAAU,kBAAkBb,GAAe,M,wOC4EjDuC,E,YA9Eb,WAAa3C,GAAQ,IAAD,8BAClB,4CAAMA,KAEDC,MAAQ,CACXiC,KAAM,GACNU,YAAa,GACbC,cAAc,GAGhB,EAAK7B,iBAAmB,EAAKA,iBAAiBV,KAAtB,gBACxB,EAAK6B,YAAc,EAAKA,YAAY7B,KAAjB,gBAVD,E,iFAelBQ,KAAKgC,Y,gCAIL,IAAMC,EAAKC,KAAKC,MAAMC,aAAaC,QAAQ,SAChC,OAAPJ,GAAeA,EAAGb,MAAQa,EAAGb,KAAKE,QACpCtB,KAAKC,UAAS,SAACqC,GAAD,MAAgB,CAC5BlB,KAAI,sBAAOkB,EAAUlB,MAAjB,YAA0Ba,EAAGb,a,uCAKtBmB,GAAiB,IAAD,OAC/BvC,KAAKC,UAAU,SAAAqC,GAAc,IACnBlB,EAASkB,EAATlB,KAIR,OAFAA,EAAKoB,KAAKD,G,yVAEH,CAAP,GACKD,EADL,CAEElB,KAAMA,OAGV,WACEgB,aAAaK,QAAQ,OAAQP,KAAKQ,UAAU,EAAKvD,a,kCAIzCqC,GAAM,IAAD,OACfxB,KAAKC,SAAS,CACZ6B,YAAaN,EACbO,cAAc,IAEhBY,YAAW,WACT,EAAK1C,SAAS,CACZ8B,cAAc,MAEf,O,+BAGK,IACA1C,EAAYW,KAAKd,MAAjBG,QADD,EAEqCW,KAAKb,MAAzCiC,EAFD,EAECA,KAAMW,EAFP,EAEOA,aAAcD,EAFrB,EAEqBA,YACpB5B,EAAkCF,KAAlCE,iBAAkBmB,EAAgBrB,KAAhBqB,YAE1B,OACE,kBAAC,IAAMuB,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAAC,GAAW,OACvC,kBAAC,EAAD,CAASC,MAAOD,EAAYC,MAAO7B,KAAMA,EAAMC,YAAaA,OAG9D,kBAAC,IAAD,CAAOyB,KAAK,QAAQC,OAAQ,SAAAC,GAAW,OACrC,kBAAC,EAAD,CAASC,MAAOD,EAAYC,MAAO/C,iBAAkBA,EAAkBb,QAASA,QAInF0C,EAAe,kBAAC,EAAD,CAAOH,MAAOE,EAAY1C,KAAME,QAASwC,EAAYxC,UAAa,Q,GAzExE2B,IAAMC,W,MCDxBgC,IAASH,OAAO,kBAAC,IAAD,KAAY,kBAAC,EAAD,OAAsBI,SAASC,eAAe,W","file":"static/js/main.c729c0c6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../styles/components/edition.scss';\n\nclass Edition extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      date: '2019/00/00',\n      feeling: 'happy',\n      message: ''\n    }\n\n    this.onChangeInfo = this.onChangeInfo.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n    onChangeInfo(event) {\n      const newInfo = event.currentTarget.value;\n      const infoKey = event.currentTarget.name;\n      \n      this.setState({\n        [infoKey]: newInfo\n      })\n    }\n\n    onSubmit() {\n      const { onFeelingsSubmit } = this.props;\n      const { date, feeling, message } = this.state;\n\n      onFeelingsSubmit({\n        date: date,\n        feeling: feeling,\n        message: (feeling === 'happy') ? message : ''\n      });\n    }\n  \n    render() {\n      const { onChangeInfo, onSubmit } = this;\n      const { feeling, message, date } = this.state\n\n      return(\n        <div className=\"edition\">\n          <form className=\"form\">\n            <div className=\"date\">\n              <label className=\"date__label\" htmlFor=\"date\">fecha</label>\n              <input \n                className=\"date__input input\"\n                type=\"date\"\n                id=\"date\"\n                name=\"date\"\n                min=\"01-01-2019\"\n                max=\"31-12-2019\"\n                step=\"1\"\n                value={date}\n                onChange={onChangeInfo}\n                />\n            </div>\n            <div className=\"state__container\">\n              <p className=\"state\">estado</p>\n              <div className=\"state__feelings\">\n                <div className=\"state__feeling\">\n                  <label className=\"state__label\" htmlFor=\"happy\">\n                    :)\n                  </label>\n                  <input\n                    className=\"state__input\"\n                    id=\"happy\"\n                    type=\"radio\"\n                    value=\"happy\"\n                    name=\"feeling\"\n                    defaultChecked\n                    onChange={onChangeInfo}\n                  />\n                </div>\n                <div>\n                  <label className=\"state__label\" htmlFor=\"sad\">\n                    :(\n                  </label>\n                  <input\n                    className=\"state__input\"\n                    id=\"sad\"\n                    type=\"radio\"\n                    value=\"sad\"\n                    name=\"feeling\"\n                    onChange={onChangeInfo}\n                  />\n                </div>\n              </div>\n            </div>\n           { feeling === 'happy'\n            ? <div className=\"message\">\n                <label className=\"message__label\" htmlFor=\"message\"></label>\n                <input \n                  className=\"message__input input\"\n                  type=\"text\"\n                  id=\"message\"\n                  name=\"message\"\n                  placeholder=\"¿Por qué es un buen día?\"\n                  onChange={onChangeInfo}\n                  value={message}\n                  />\n              </div>\n            : <div>\n                <p className=\"message__sad-day\">OHHH <span role=\"img\" aria-label=\"crying face\">&#128546;</span>, siento que hayas tenido un mal día</p>\n              </div>}\n          </form>\n          <Link className=\"edition__link\" to='/'>\n            <button className=\"save__button\" type=\"button\" onClick={onSubmit}>Guardar</button>\n            <button className=\"cancel__button\" type=\"button\">Cancelar</button>\n          </Link>\n        </div>\n      );\n    }\n}\n\nEdition.propTypes = {\n  onFeelingsSubmit: PropTypes.func.isRequired,\n  feeling: PropTypes.string\n}\n\nexport default Edition;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../styles/components/dayList.scss';\n\nconst DayList = (props) => {\n  const { days, showMessage } = props;\n\n  return(\n    <div className=\"dayList\">\n      <Link className=\"dayList__linK\" to='/form'>\n        <button className=\"back__button\" type=\"button\">+</button>\n      </Link>\n      <div className=\"dayList__calendar\">\n        {days.length \n        ? <ul className=\"dayList__list\">\n              {days.map((day, index) =>\n                  <li key={`day-${index}`} className=\"dayList__day\">\n                    <div className=\"day__information\" onClick={() => showMessage(day)}>\n                      <p className=\"day__date\">{day.date}</p>\n                    {day.feeling === 'happy' \n                    ? <span className=\"day__emoji\" role=\"img\" aria-label=\"smiling\">&#128515;</span>\n                    : <span className=\"day__emoji\" role=\"img\" aria-label=\"disappointed\">&#128543;</span>\n                    }\n                    </div>\n                  </li>\n                )}\n          </ul>\n        : <div className=\"dayList__message\">\n            Rellena tu calendario de emojis\n            <span className=\"dayList__message__emoji\" role=\"img\" aria-label=\"calendar\">&#128198;</span>\n          </div>\n      }\n      </div>\n    </div>\n  )\n}\n\nDayList.propTypes = {\n  days: PropTypes.arrayOf(PropTypes.object).isRequired,\n  showMessage: PropTypes.func.isRequired\n}\n\nexport default DayList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/components/popUp.scss';\n\nconst PopUp = (props) => {\n  const { title, message } = props;\n\n  return(\n    <div className=\"popup\">\n      <p className=\"popup__title\">{title}</p>\n      { message ? <p className=\"popup__message\">{message}</p> : '' }\n    </div>\n  )\n}\n\nPopUp.propTypes = {\n  title: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired\n}\n\nexport default PopUp;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Edition from './components/Edition';\nimport DayList from './components/DayList';\nimport PopUp from './components/PopUp';\nimport './styles/components/app.scss';\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      days: [],\n      selectedDay: {},\n      isPopupShown: false\n    }\n\n    this.onFeelingsSubmit = this.onFeelingsSubmit.bind(this);\n    this.showMessage = this.showMessage.bind(this);\n    \n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  getUser() {\n    const ls = JSON.parse(localStorage.getItem('User'));\n    if (ls !== null && ls.days && ls.days.length) {\n      this.setState((prevState) => ({\n        days : [...prevState.days, ...ls.days]\n      }));\n    };\n  }\n\n  onFeelingsSubmit(newInformation) {\n    this.setState((prevState => {\n      const { days } = prevState\n\n      days.push(newInformation);\n\n      return {\n        ...prevState,\n        days: days\n      }\n    }),\n    () => {\n      localStorage.setItem('User', JSON.stringify(this.state));\n    });\n  }\n\n  showMessage(day) {\n    this.setState({\n      selectedDay: day,\n      isPopupShown: true\n    })\n    setTimeout(() => {\n      this.setState({\n        isPopupShown: false\n      })\n    }, 2000);\n  }\n\n  render() {\n    const { feeling } = this.props;\n    const { days, isPopupShown, selectedDay } = this.state;\n    const { onFeelingsSubmit, showMessage } = this;\n\n    return(\n      <React.Fragment>\n        <Switch >\n          <Route exact path=\"/\" render={RouterProps => (\n            <DayList match={RouterProps.match} days={days} showMessage={showMessage}/>  \n          )}>\n          </Route>\n          <Route path=\"/form\" render={RouterProps => (\n            <Edition match={RouterProps.match} onFeelingsSubmit={onFeelingsSubmit} feeling={feeling} />\n          )}>\n          </Route>\n        </Switch>\n       { isPopupShown ? <PopUp title={selectedDay.date} message={selectedDay.message}/> : '' }\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}